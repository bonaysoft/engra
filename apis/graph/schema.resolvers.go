package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.26

import (
	"context"

	"github.com/bonaysoft/engra/apis/graph/model"
)

// Vocabularies is the resolver for the vocabularies field.
func (r *queryResolver) Vocabularies(ctx context.Context, names []string) ([]*model.Vocabulary, error) {
	vs := make([]*model.Vocabulary, 0, len(names))
	for _, name := range names {
		v, err := r.Lookup(ctx, name)
		if err != nil {
			return nil, err
		}

		vs = append(vs, v)
	}

	return vs, nil
}

// VocabularyRootTree is the resolver for the vocabularyRootTree field.
func (r *queryResolver) VocabularyRootTree(ctx context.Context, name string) (*model.Vocabulary, error) {
	return r.LookupWithRoot(ctx, name)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
