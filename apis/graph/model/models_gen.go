// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"strconv"
)

type Vocabulary struct {
	Name       string        `json:"name"`
	Phonetic   string        `json:"phonetic" yaml:"phonetic,omitempty"`
	Mnemonic   string        `json:"mnemonic" yaml:"mnemonic,omitempty"`
	Constitute []string      `json:"constitute" yaml:"constitute,omitempty"`
	Meaning    string        `json:"meaning" yaml:"meaning,omitempty"`
	Tags       []string      `json:"tags" yaml:"tags,omitempty"`
	Children   []*Vocabulary `json:"children" yaml:"children,omitempty"`
}

func (n *Vocabulary) Status() string {
	var score int
	if n.Phonetic != "" {
		score++
	}
	if n.Meaning != "" {
		score++
	}
	if n.Mnemonic != "" {
		score++
	}
	if len(n.Constitute) > 0 {
		score++
	}
	if len(n.Children) > 0 {
		score++
	}

	if score > 0 {
		return strconv.Itoa(score)
	}

	return "-"
}
